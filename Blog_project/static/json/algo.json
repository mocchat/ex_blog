[
	{
		"id": 0,
		"category": "Algo",
		"title": "1520 \ub0b4\ub9bc\ub9c9\uae38",
		"subtitle": "dp, graph(dfs)",
		"author": "mocchat",
		"date": "2023\ub1449\uc6d43\uc77c",
		"body": "<pre>\r\n\r\n<img alt=\"\" src=\"..\\..\\static\\assets\\img\\1520pro.png\" style=\"height:828px; margin-left:200px; margin-right:200px; width:900px\" />\r\n\r\n\r\n\r\n\r\n\r\n\ucf54\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4.\r\n\r\nimport sys\r\n\r\nsys.setrecursionlimit(10**6)\r\nn, m = map(int, sys.stdin.readline().split())\r\nif n == 1 and m == 1:\r\n    print(1)\r\nelse:\r\n    li = []\r\n    visit = []     # \ubc29\ubb38\ud588\ub294\uc9c0 \uae30\ub85d\r\n    v_count = []   # \uc774\ubbf8 \ubaa9\uc801\uc9c0\uc5d0 \ub3c4\ub2ec\ud588\ub358 \uae38 \ub610\ub294 \uac00\ub85c\ub9c9\ud78c \uae38 \ud655\uc778\r\n    route = []     # \uc9c0\ub098\uac04 \uae38 \uc800\uc7a5(visit\uc774\ub791 \ub0b4\uc6a9\uc740 \uac19\uc9c0\ub9cc v_count\ub97c \uc62c\ub9ac\ub294 \uacfc\uc815\uc5d0\uc11c visit\uc744 \ubaa8\ub450 \r\n                   # \ud655\uc778\ud558\ub294 \uac83\ubcf4\ub2e4\ub294 \uc5ec\uae30\uc5d0 \uc800\uc7a5\ud558\uace0 \uc0ac\uc6a9\ud558\ub294 \uac83\uc774 \ub354 \ube60\ub97c \uac83\uc774\ub77c\uace0 \uc0dd\uac01\ud568)\r\n    for _ in range(n):\r\n        li.append(list(map(int, sys.stdin.readline().split())))\r\n        visit.append([0]*m)\r\n        v_count.append([0]*m)\r\n    count = 0\r\n    dx = [1, -1, 0, 0]\r\n    dy = [0, 0, 1, -1]\r\n\r\n\r\n    def check(x, y):\r\n        global count\r\n        s = []\r\n        for i in range(4):\r\n            zx = x + dx[i]\r\n            zy = y + dy[i]\r\n            if 0 &lt;= zx &lt; n and 0 &lt;= zy &lt; m:\r\n                if zx == n - 1 and zy == m - 1 and li[zx][zy] &lt; li[x][y]:    # \ubaa9\uc801\uc9c0\uc5d0 \ub3c4\ub2ec\r\n                    for a in route:\r\n                        b, c = a \r\n                        v_count[b][c] += 1\r\n                    count += 1\r\n                    return\r\n                if li[x][y] &gt; li[zx][zy] and visit[zx][zy] == 0 and v_count[zx][zy] &gt; -1:\r\n                    if v_count[zx][zy] != 0:     # \ubaa9\uc801\uc9c0\uc5d0 \ub3c4\ub2ec\ud588\ub358 \uae38\r\n                        for a in route:\r\n                            b, c = a\r\n                            v_count[b][c] += v_count[zx][zy]\r\n                        count += v_count[zx][zy]\r\n                    else:\r\n                        s.append((zx, zy))\r\n        if v_count[x][y] == 0 and len(s) == 0:   # \uc0ac\ubc29\uc774 \uac00\ub85c\ub9c9\ud78c \uae38\r\n            v_count[x][y] = -1\r\n        while s:\r\n            qx, qy = s.pop()\r\n            route.append((qx, qy))\r\n            visit[qx][qy] = 1\r\n            check(qx, qy)\r\n            route.pop()\r\n            visit[qx][qy] = 0\r\n            if v_count[x][y] == 0 and len(s) == 0:\r\n                v_count[x][y] = -1\r\n\r\n\r\n    check(0, 0)\r\n    print(count)\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\uc774\ubc88 \ubb38\uc81c\ub294 dp\uc640 dfs\ub97c \ub3d9\uc2dc\uc5d0 \uc774\uc6a9\ud558\ub294 \ubb38\uc81c\uc774\ub2e4.</p>\r\n\r\n<p>\ucc98\uc74c\uc5d0\ub294 dfs\ub9cc \uc774\uc6a9\ud558\uc5ec \ubb38\uc81c\ub97c \ud480\uc5b4 \uc608\uc81c\ub97c \ud1b5\uacfc\ud588\uc9c0\ub9cc \uc2dc\uac04\ucd08\uacfc\uac00 \ub098\uc624\uace0 \ub9d0\uc558\ub2e4.</p>\r\n\r\n<p>\ub2e4\uc74c\uc5d4 v_count\ub97c \uc774\uc6a9\ud558\uc5ec \ubaa9\uc801\uc9c0\uae4c\uc9c0 \ub3c4\ub2ec\ud588\ub358 \uae38\uc744 \ud45c\uc2dc\ub97c \uc800\uc7a5\ud558\uba74\uc11c \ud480\uc5c8\uc9c0\ub9cc \ub9c8\ucc2c\uac00\uc9c0\ub85c \uc2dc\uac04\ucd08\uacfc.</p>\r\n\r\n<p>\uacb0\uad6d \ub9c9\ub2e4\ub978 \uae38\uae4c\uc9c0 \uc800\uc7a5\ud558\uba70 \ud478\ub2c8 \uc774\uc81c\uc11c\uc57c \uc2dc\uac04\ub0b4\uc5d0 \ud1b5\uacfc\ub97c \ud560 \uc218 \uc788\uc5c8\ub2e4.</p>\r\n\r\n<p>dfs \uc54c\uace0\ub9ac\uc998 \uc790\uccb4\ub294 \uc26c\uc5c8\uc73c\ub098 \uc5ec\ub7ec dp\ub97c \ud65c\uc6a9\ud558\ub294 \ubc29\uc548\uc744 \ub5a0\uc62c\ub9ac\ub294\ub370 \uc2dc\uac04\uc774 \uc624\ub798 \uac78\ub9b0 \ubb38\uc81c\uc600\ub2e4.</p>\r\n",
		"comment": []
	},
	{
		"id": 1,
		"category": "Algo",
		"title": "1005 ACM Craft",
		"subtitle": "dp, graph(dfs)",
		"author": "mocchat",
		"date": "2023\ub1449\uc6d410\uc77c",
		"body": "<p><img alt=\"\" src=\"..\\..\\static\\assets\\img\\1005pro.jpg\\\" style=\"height:753px; width:799px\" /></p>\r\n\r\n<p>\ucf54\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\nimport sys\r\n\r\nsys.setrecursionlimit(10**6)\r\nn = int(sys.stdin.readline())\r\n\r\nfor _ in range(n):\r\n    a, b = map(int, sys.stdin.readline().split())\r\n    # \uac74\ubb3c \uc9d3\ub294\ub370 \uac78\ub9ac\ub294 \uc2dc\uac04 \ub9ac\uc2a4\ud2b8\r\n    cost = [&#39;x&#39;]\r\n    cost += list(map(int, sys.stdin.readline().split()))\r\n    # dp \ub9ac\uc2a4\ud2b8\r\n    ans = [0] * (a+1)\r\n    # \ubc29\ubb38 \ud655\uc778 \ub9ac\uc2a4\ud2b8\r\n    visit = [False for _ in range(a+1)]\r\n    # \uac01 \uac74\ubb3c \uc9d3\ub294\ub370 \ud544\uc694\ud55c \uc0ac\uc804 \uac74\ubb3c \ub9ac\uc2a4\ud2b8\r\n    li = [[] for _ in range(a+1)]\r\n    for _ in range(b):\r\n        x, y = map(int, sys.stdin.readline().split())\r\n        li[y].append(x)\r\n    goal = int(sys.stdin.readline())\r\n    ans[goal] = cost[goal]\r\n\r\n\r\n    def check(am):\r\n        # \uc2dc\uc791\uc810 \ud655\uc778 // \uc0ac\uc804 \uac74\ubb3c\uc774 \ud558\ub098\ub3c4 \uc5c6\uc73c\uba74 \uc2dc\uc791\uc810\r\n        if len(li[am]) == 0:\r\n            ans[am] = cost[am]\r\n            visit[am] = True\r\n            return\r\n        # \uc0ac\uc804 \uac74\ubb3c \ud655\uc778\r\n        for i in li[am]:\r\n            # \uc0ac\uc804 \uac74\ubb3c\uc5d0 \ubc29\ubb38\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \uc7ac\uadc0\r\n            if not visit[i]:\r\n                check(i)\r\n            # \uc0ac\uc804 \uac74\ubb3c \uc911 \uac00\uc7a5 \uae34 \uac74\uc124 \uae30\uac04\uc744 \uac16\ub294 \uac83\uc73c\ub85c dp \uc800\uc7a5\r\n            ans[am] = max(ans[am], cost[am] + ans[i])\r\n        visit[am] = True\r\n        return\r\n\r\n\r\n    check(goal)\r\n    print(ans[goal])\r\n\r\n\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\uc774\ubc88 \ubb38\uc81c\ub294 \uadf8\ub798\ud504\uc640 dp\ub97c \uc774\uc6a9\ud558\uc5ec \ud480\uc5c8\ub2e4.</p>\r\n\r\n<p>\ucc98\uc74c\uc5d0\ub294 bfs\ub9cc\uc744 \uc774\uc6a9\ud558\uc5ec \uc5ed\uc21c\uc73c\ub85c \ud480\uc5c8\uc9c0\ub9cc \uc2dc\uac04\ucd08\uacfc\uac00 \ub098\uc640 dp\uc640 \uc7ac\uadc0\ud568\uc218(dfs)\ub85c</p>\r\n\r\n<p>\ubc14\uafb8\ub2c8 \ud1b5\uacfc\ud560 \uc218 \uc788\uc5c8\ub2e4.</p>\r\n\r\n<p>&nbsp;</p>\r\n",
		"comment": []
	},
	{
		"id": 2,
		"category": "Algo",
		"title": "16236 \uc544\uae30\uc0c1\uc5b4",
		"subtitle": "graph(bfs)",
		"author": "mocchat",
		"date": "2023\ub1449\uc6d414\uc77c",
		"body": "<p><img alt=\"\" src=\"../../static/assets/img/16236pro.jpg\" style=\"height:842px; width:963px\" /></p>\r\n\r\n<p>\ucf54\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\nimport sys\r\nfrom collections import deque\r\n\r\nsys.setrecursionlimit(10**6)\r\nn = int(sys.stdin.readline())\r\nli = []\r\nvisit = []\r\ns = False\r\nsize = 2\r\neat = 0\r\nans = 0\r\n\r\nfor _ in range(n):\r\n    li.append(list(map(int, sys.stdin.readline().split())))\r\n    visit.append([False] * n)\r\n\r\nfor i in range(n):\r\n    if s:\r\n        break\r\n    for j in range(n):\r\n        if li[i][j] == 9:\r\n            li[i][j] = 0\r\n            start = (i, j, 0)\r\n            visit[i][j] = True\r\n            s = True\r\n            break\r\n\r\nnext_li = [start]\r\ndx = [1, -1, 0, 0]\r\ndy = [0, 0, 1, -1]\r\n\r\n\r\nwhile True:\r\n    eating = []\r\n    # next_li\ub97c stack\uc73c\ub85c \ubc14\uafd4\uc90c\r\n    stack = deque(next_li)\r\n    next_li.clear()\r\n    # stack\uc548\uc758 \ub0b4\uc6a9\ubb3c\uc774 \uc5c6\uc744 \ub54c\uae4c\uc9c0 bfs\r\n    while stack:\r\n        x, y, count = stack.popleft()\r\n        for i in range(4):\r\n            zx = dx[i] + x\r\n            zy = dy[i] + y\r\n            if 0 &lt;= zx &lt; n and 0 &lt;= zy &lt; n and visit[zx][zy] == False and size &gt;= li[zx][zy]:\r\n                visit[zx][zy] = True\r\n                # 0\uc774 \uc544\ub2c8\uace0 size\ubcf4\ub2e4 \uc791\ub2e4\uba74 eating\uc5d0 \ub123\uc5b4\uc8fc\uae30\r\n                if li[zx][zy] &lt; size and li[zx][zy] != 0:\r\n                    eating.append((zx, zy, count+1))\r\n                # eating\uc774 \uc788\ub2e4\uba74 \uc0dd\ub7b5 // \uc870\uae08\uc774\ub77c\ub3c4 \uc2dc\uac04\uc744 \uc904\uc774\uae30 \uc704\ud558\uc5ec\r\n                if len(eating) == 0:\r\n                    next_li.append((zx, zy, count+1))\r\n    # eating\uc774 \uc874\uc7ac\ud55c\ub2e4\uba74 \uba39\uc744 \uc218 \uc788\ub294 \uac83\ub4e4 \uc911\uc5d0 \uac00\uc7a5 \uc704\uc5d0 \uc788\uace0 \uc67c\ucabd\uc5d0 \uc788\ub294 \uac83\uc744 \ucc3e\uc544\uc57c\ud568\r\n    if len(eating) != 0:\r\n        # \uac00\uc7a5 \uc704\uc5d0 \uc788\uace0 \uc67c\ucabd\uc5d0 \uc788\ub294 \uac83\uc740 x\uc640 y\uac00 \uac00\uc7a5 \uc791\uc740 \uac12\uc774\ubbc0\ub85c sort\r\n        eating.sort()\r\n        eat += 1\r\n        x, y, count = eating[0]\r\n        li[x][y] = 0\r\n        # next_li\ub97c \ube44\uc6b0\uace0 \uba39\uc740 \uacf3\uc5d0\uc11c \uc0c8\ub85c\uc6b4 bfs \uc2dc\uc791\ud558\ub3c4\ub85d \ud568.\r\n        next_li.clear()\r\n        next_li.append((x, y, count))\r\n        ans = count\r\n        # \uba39\uc740 \uc591\uc774 size\uc640 \uac19\uc544\uc9c0\uba74 \uba39\uc740 \uc591 \ucd08\uae30\ud654\ud558\uace0 size \uc5c5\r\n        if eat == size:\r\n            size += 1\r\n            eat = 0\r\n        # \uc0c8\ub85c\uc6b4 bfs\ub97c \uc704\ud558\uc5ec visit \ucd08\uae30\ud654 \r\n        visit.clear()\r\n        for p in range(n):\r\n            visit.append([False] * n)\r\n        visit[x][y] = True\r\n        eating.clear()\r\n    # \ub354 \uc774\uc0c1 \uc774\ub3d9\ud560 \uacf3\uc774 \uc5c6\ub2e4\uba74 \ub05d\r\n    if len(next_li) == 0:\r\n        break\r\n\r\nprint(ans)\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\uc774\ubc88 \ubb38\uc81c\ub294 bfs\ub97c \ubc18\ubcf5\uc801\uc73c\ub85c \ud65c\uc6a9\ud558\uc5ec \ud478\ub294 \ubb38\uc81c\uc600\ub2e4.</p>\r\n\r\n<p>\uc774\ubc88 \ubb38\uc81c\uc5d0\uc11c \uac00\uc7a5 \ud070 \ub09c\uad00\uc740 dx, dy(\uac00\uc911\uce58)\ub97c \uc774\uc6a9\ud558\uc5ec bfs\ub97c \ud480 \ub54c, \uc774\uac83\ub9cc\uc73c\ub85c\ub294 \uac00\uc7a5 \uc704\ucabd, \uc67c\ucabd\uc5d0\uc11c \ubd80\ud130 \uba39\ub294 \uac83\uc744 \uad6c\ud604\ud558\uc9c0 \ubabb\ud558\ub294\ub2e4\ub294 \uc810\uc774\uc5c8\ub2e4.</p>\r\n\r\n<p>\uadf8\ub798\uc11c \ub530\ub85c bfs\ub97c \ud55c\ubc88 \ub3cc\ub9b4 \ub54c\ub9c8\ub2e4 \uba39\uc774\uac00 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uace0, \uba39\uc774\uac00 \uc788\ub2e4\uba74 \uadf8 \uc911\uc5d0\uc11c \uac00\uc7a5 \uc704\ucabd, \uc67c\ucabd\uc5d0 \uc788\ub294 \uac83\uc744 \uad6c\ud558\ub3c4\ub85d \ud558\uc600\ub2e4.</p>\r\n\r\n<p>\uc774\uc678\uc5d0\ub3c4 \uc2dc\uac04\ucd08\uacfc \ub4f1\uc758 \ubb38\uc81c\uac00 \uc788\uc5c8\uc9c0\ub9cc visit\uc744 \ud310\ubcc4\ud558\ub294 \ubd80\ubd84\uc744 stack\uc5d0\uc11c pop\ud560 \ub54c\uac00 \uc544\ub2c8\ub77c next_li\uc5d0 append\ud560 \ub54c\ub85c \uc218\uc815\ud558\uc600\ub354\ub2c8 \ud574\uacb0\ub418\uc5c8\ub2e4.</p>\r\n",
		"comment": []
	},
	{
		"id": 3,
		"category": "Algo",
		"title": "2252 \uc904 \uc138\uc6b0\uae30",
		"subtitle": "dp, graph",
		"author": "mocchat",
		"date": "2023\ub1449\uc6d415\uc77c",
		"body": "<p><img alt=\"\" src=\"../../static/assets/img/2252pro.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\ucf54\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\nimport sys\r\n\r\nsys.setrecursionlimit(10**6)\r\nn, m = map(int, sys.stdin.readline().split())\r\nli = [[] for _ in range(n+1)]\r\ncount = []\r\nvisit = [False] * (n+1)\r\n\r\n# li\uc5d0 \uc785\ub825\uac12 \ub123\uae30\r\nfor _ in range(m):\r\n    x, y = map(int, sys.stdin.readline().split())\r\n    li[y].append(x)\r\n# count\uc5d0 \uae30\ubcf8 \ucf54\uc2a4\ud2b8 1\uacfc \uc21c\uc11c(i) \ub123\uae30\r\nfor i in range(n+1):\r\n    count.append([1, i])\r\n\r\n\r\ndef check(i):\r\n    # \ubc29\ubb38\ud588\ub2e4\uba74 count\uc5d0 \uc800\uc7a5\ub418\uc5b4\uc788\ub294 \ucf54\uc2a4\ud2b8 return\r\n    if visit[i]:\r\n        return count[i][0]\r\n    cost = 1\r\n    # \ubc29\ubb38\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 li\uc5d0 \uc785\ub825\ud574\ub450\uc5c8\ub358 \uc55e\uc5d0 \uc788\uc5b4\uc57c\ud558\ub294 \uc560\ub4e4 \uc7ac\uadc0\ud568\uc218\ub85c \ub3cc\ub9ac\uae30\r\n    for t in li[i]:\r\n        # return \uac12\uc774 \uac01 \uc560\ub4e4\uc758 \ucf54\uc2a4\ud2b8\uc774\ubbc0\ub85c \ub354\ud574\uc8fc\uae30\r\n        cost += check(t)\r\n    # \uacc4\uc0b0\ud55c \ucf54\uc2a4\ud2b8 count\uc5d0 \ub123\uae30\r\n    count[i][0] = cost\r\n    # \ubc29\ubb38 \ud45c\uc2dc\r\n    visit[i] = True\r\n    # \ucf54\uc2a4\ud2b8 return\r\n    return count[i][0]\r\n\r\n\r\nfor i in range(1, n+1):\r\n    # \uc55e\uc5d0 \uc560\ub4e4\uc774 \uc5c6\ub2e4\uba74 \ucf54\uc2a4\ud2b8 \uacc4\uc0b0 \uc548\ud574\ub3c4 \ub418\ubbc0\ub85c \ubc29\ubb38\ucc98\ub9ac\r\n    if len(li[i]) == 0 and not visit[i]:\r\n        visit[i] = True\r\n    else:\r\n        check(i)\r\n\r\n# \ud3b8\ud558\uac8c \ucf54\ub529\ud560\ub824\uace0 n+1\ud06c\uae30\ub85c \ub9cc\ub4e4\uc5c8\uc73c\ub2c8 \uc4f8\ubaa8\uc5c6\ub294 \ub9e8 \uc55e\ubd80\ubb38 \uc0ad\uc81c\r\ndel count[0]\r\n# \ucf54\uc2a4\ud2b8 \ud06c\uae30 \ubcc4\ub85c count sort\r\ncount.sort(key = lambda x:x[0])\r\nfor a in count:\r\n    print(a[1], end=&quot; &quot;)\r\n\r\n\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\uc774\ubc88 \ubb38\uc81c\ub294 \uc0c1\ub2f9\ud788 \uc27d\uac8c \ud480 \uc218 \uc788\uc5c8\ub2e4.</p>\r\n\r\n<p>\uac01 \ud559\uc0dd\ub4e4\uc758 \ub9ac\uc2a4\ud2b8\uc5d0 \uc55e\uc5d0 \uc788\uc5b4\uc57c\ud558\ub294 \uc560\ub4e4\uc744 \ub123\uace0,&nbsp; \uadf8 \uc560\ub4e4\uc758 \ucf54\uc2a4\ud2b8\uc758 \ud569\uc774 \ud574\ub2f9 \ud559\uc0dd\uc758 \ucf54\uc2a4\ud2b8\uac00 \ub418\ub3c4\ub85d \ud558\uc600\ub2e4.</p>\r\n\r\n<p>\ubc29\ubb38\ud588\ub358 \ud559\uc0dd\uc774\uba74 count\uc5d0 \uc800\uc7a5\ub418\uc788\ub358 \ucf54\uc2a4\ud2b8\ub97c \ub9ac\ud134\ud558\uace0 \ubc29\ubb38\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \uc7ac\uadc0\ud568\uc218\ub97c \ub3cc\ub824 \ucf54\uc2a4\ud2b8\ub97c \uacc4\uc0b0\ud558\uc5ec count\uc5d0 \uc800\uc7a5\ud55c\ub2e4.</p>\r\n\r\n<p>\uc624\ub79c\ub9cc\uc5d0 \ud55c\ubc88\uc5d0 \ud1b5\uacfc\ud55c \ubb38\uc81c\uc600\ub2e4.</p>\r\n\r\n<p>\ubb38\uc81c\ub97c \ud480\uace0\ub098\uc11c \ubd84\ub958\ub97c \ubcf4\ub2c8 \uadf8\ub798\ud504\uc640 \uc704\uc0c1\uc815\ub82c\uc774\uc5c8\ub2e4.</p>\r\n\r\n<p>\uc704\uc0c1\uc815\ub82c\uc774\ub77c\ub294 \ub9d0\uc774 \uc0dd\uc18c\ud558\uc5ec \uc778\ud130\ub137\uc5d0 \uac80\uc0c9\ud574\ubcf4\ub2c8 \uc21c\uc11c\uac00 \uc815\ud574\uc9c4 \uc791\uc5c5\uc744 \ucc28\ub840\ub85c \uc218\ud589\ud560 \ub54c \uc0ac\uc6a9\ud558\ub294 \uc54c\uace0\ub9ac\uc998\uc774\ub77c\uace0 \ud55c\ub2e4.</p>\r\n\r\n<p>\ubcf4\ud1b5 \uc5f0\uacb0\ub9ac\uc2a4\ud2b8\ub85c \uad6c\ud604\ud558\ub294 \uc54c\uace0\ub9ac\uc998\uc73c\ub85c \ub0b4\uac00 \ud47c \ubc29\uc2dd\uc778 \uac00\uc911\uce58\ub97c \ub354\ud558\ub294 \ubc29\uc2dd\uacfc \uacb0\uacfc\ub294 \uac19\uaca0\uc9c0\ub9cc \uacfc\uc815\uc740 \uc0c1\ub2f9\ud788 \ub2ec\ub790\ub2e4.</p>\r\n\r\n<p>\uc774\ub97c \uae30\uc5b5\ud574\ub450\uc5c8\ub2e4\uac00 \ub098\uc911\uc5d0 \ube44\uc2b7\ud55c \ubb38\uc81c\uac00 \ub098\uc624\uba74 \uc774 \ubc29\uc2dd\uc73c\ub85c \ud480\uc5b4\ubcf4\uc544\uc57c \uaca0\ub2e4.</p>\r\n",
		"comment": []
	},
	{
		"id": 4,
		"category": "Algo",
		"title": "9466 \ud300 \ud504\ub85c\uc81d\ud2b8",
		"subtitle": "dp",
		"author": "mocchat",
		"date": "2023\ub14410\uc6d47\uc77c",
		"body": "<p><img alt=\"\" src=\"..\\..\\static\\assets\\img\\9466pro.jpg\" style=\"height:791px; width:931px\" /></p>\r\n\r\n<p>\ucf54\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\nimport sys\r\n\r\n# case \uac2f\uc218\r\ncase = int(sys.stdin.readline())\r\n\r\n\r\n# \uadf8\ub8f9\uc778\uc9c0 \uc544\ub2cc\uc9c0 \uccb4\ud06c\ud558\ub294 \ud568\uc218, visit[i]\uac00 0\uc774\uba74 \uc544\uc9c1 \ubc29\ubb38 \uc548\ud568,\r\n# 1\uc774\uba74 \ubc29\ubb38\ud588\uc9c0\ub9cc \uadf8\ub8f9\uc778\uc9c0 \uc544\ub2cc\uc9c0 \ud310\ubcc4\uc774 \uc544\uc9c1 \uc548\ub41c \uc0c1\ud0dc, 2\uc774\uba74 \ubc29\ubb38\ud588\uace0 \ud310\ubcc4\ub41c \uc0c1\ud0dc\r\ndef check(i):\r\n    # count\ub294 \uadf8\ub8f9\uc774 \uc544\ub2cc \uc870\uc6d0 \uc218\r\n    global count\r\n    # group\uc740 \ubc29\ubb38\ud55c \uacf3 \ub123\ub294 \ub9ac\uc2a4\ud2b8\r\n    group = []\r\n    while True:\r\n        # visit[i]\uac00 0\uc774\uba74 \uc774\ubc88 \ubc29\ubb38\uc774 \ucc98\uc74c \r\n        if visit[i] == 0:\r\n            # \uc870\uc6d0\uc774 \uc790\uae30\uc790\uc2e0\uc744 \ubf51\uc544 \ud63c\uc790 \ud300\uc744 \uc774\ub8f0 \ub54c\r\n            if li[i] == i + 1:\r\n                visit[i] = 2\r\n                # \uc9c0\uae08\uae4c\uc9c0 \ubc29\ubb38\ud588\ub358 \uacf3\uc744 2\ub85c \ubc14\uafc8\r\n                for j in group:\r\n                    visit[j] = 2\r\n                # group\uc758 \uc218\ub9cc\ud07c count\uc5d0 \ub123\uc74c\r\n                count += len(group)\r\n                # whlie\ubb38 \uc885\ub8cc\r\n                break\r\n            # \uc9c0\ubaa9\ud55c \ub2e4\uc74c \uc870\uc6d0\uc73c\ub85c \uc774\ub3d9\r\n            else:\r\n                # group\uc5d0 \ud604\uc7ac \uc8fc\uc18c\ub97c \ub123\uace0 \ub2e4\uc74c \uc8fc\uc18c\ub85c \uc774\ub3d9\r\n                group.append(i)\r\n                visit[i] = 1\r\n                i = li[i] - 1\r\n        \r\n        # 1\uc774\ubbc0\ub85c \ubc29\ubb38\ud588\uc9c0\ub9cc \ud300\uc778\uc9c0 \ubaa8\ub974\ub294 \uc0c1\ud0dc, \uc989 \uc5ec\uae30\uc11c\ubd80\ud130 \ub9c8\uc9c0\ub9c9\uae4c\uc9c0 \ud300\uc744 \uc774\ub8f8\r\n        elif visit[i] == 1:\r\n            # group\uc5d0\uc11c \ud604\uc7ac \uc8fc\uc18c \ucc3e\uc74c\r\n            k = group.index(i)\r\n            # \uc9c0\uae08\uae4c\uc9c0 \ubc29\ubb38\ud588\ub358 \uacf3\uc744 2\ub85c \ubc14\uafc8\r\n            for j in group:\r\n                visit[j] = 2\r\n            # group\uc758 \ucc98\uc74c\ubd80\ud130 \ud604\uc7ac\uc8fc\uc18c \uc804\uae4c\uc9c0\ub294 \ud300\uc774 \ub418\uc9c0 \ubabb\ud558\ubbc0\ub85c count\uc5d0 \ub354\ud574\uc90c\r\n            count += len(group[:k])\r\n            # while\ubb38 \uc885\ub8cc\r\n            break\r\n            \r\n        # visit[i]\uac00 2\uc77c\ub54c, \uc989 \uc774\ubbf8 \ud300\uc778\uc9c0 \uc544\ub2cc\uc9c0 \ud310\ubcc4\ub09c \uc0c1\ud0dc. \ubb34\uc870\uac74 \ud300\uc774 \ub420 \uc218 \uc5c6\uc74c\r\n        else:\r\n            # \uc9c0\uae08\uae4c\uc9c0 \ubc29\ubb38\ud588\ub358 \uacf3\uc744 2\ub85c \ubc14\uafc8\r\n            for j in group:\r\n                visit[j] = 2\r\n            # group\uc758 \uc218\ub9cc\ud07c count\uc5d0 \ub354\ud574\uc90c\r\n            count += len(group)\r\n            # while\ubb38 \uc885\ub8cc\r\n            break\r\n\r\n\r\nfor _ in range(case):\r\n    # \uc0ac\ub78c \uc218\r\n    n = int(sys.stdin.readline())\r\n    # \uc9c0\ubaa9\ud558\ub294 \uc0ac\ub78c \ub9ac\uc2a4\ud2b8\r\n    li = list(map(int, sys.stdin.readline().split()))\r\n    # \ubc29\ubb38 \ud45c\uc2dc\r\n    visit = [0] * n\r\n    count = 0\r\n    \r\n    # \ucc98\uc74c\ubd80\ud130 \ubc29\ubb38\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \uc704\uc758 \ud568\uc218\ub97c \ub3cc\ub9bc\r\n    for i in range(n):\r\n        if visit[i] == 0:\r\n            check(i)\r\n    \r\n    # \uc815\ub2f5 \ucd9c\ub825\r\n    print(count)</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\uc774\ubc88 \ubb38\uc81c\ub294 \ube44\uad50\uc801 \uc27d\uac8c \ud480 \uc218 \uc788\uc5c8\ub2e4.</p>\r\n\r\n<p>\ucc98\uc74c\uc5d0\ub294 \ud568\uc218\ub97c \ub9cc\ub4e4\uc9c0 \uc54a\uace0, \ud300\uc744 \ud558\ub098 \ub9cc\ub4e4\ub54c\ub9c8\ub2e4, 0\uc758 \uc704\uce58\ub97c&nbsp;</p>\r\n\r\n<p>\ucc3e\uae30\uc704\ud574 index\ub97c \uc0ac\uc6a9\ud558\uc600\uc9c0\ub9cc \uc2dc\uac04\ucd08\uacfc\uac00 \ub098\uc654\ub2e4.</p>\r\n\r\n<p>index \ud568\uc218\ub294 \uc2dc\uac04\ubcf5\uc7a1\ub3c4\uac00 O(n)\uc774\ub77c \uc5ec\ub7ec\ubc88 \ub3cc\ub9ac\uba74 \uc2dc\uac04\ucd08\uacfc\uac00</p>\r\n\r\n<p>\ub098\uc624\ubbc0\ub85c \ud568\uc218\ub85c \ub9cc\ub4e4\uc5b4 0\ubd80\ud130 n-1\uae4c\uc9c0 \ubc29\ubb38\ud558\uc9c0 \uc54a\uc558\ub2e4\uba74 \ud568\uc218\ub97c</p>\r\n\r\n<p>\ub3cc\ub9ac\ub294 \uac83\uc73c\ub85c \uad6c\ud604\ud558\uc600\ub2e4.</p>\r\n\r\n<p>cO(n)\uc5d0\uc11c O(n)\uc73c\ub85c \uc2dc\uac04\ubcf5\uc7a1\ub3c4\uac00 \uc904\uc5b4\ub4e0 \uac83\uc73c\ub85c \uc0dd\uac01\ud55c\ub2e4.(c\ub294 \uc0c1\uc218)</p>\r\n",
		"comment": []
	},
	{
		"id": 5,
		"category": "Algo",
		"title": "1600 \ub9d0\uc774 \ub418\uace0\ud508 \uc6d0\uc22d\uc774",
		"subtitle": "graph(bfs)",
		"author": "mocchat",
		"date": "2023\ub14410\uc6d410\uc77c",
		"body": "<p><img alt=\"\" src=\"..\\..\\static\\assets\\img\\1600pro.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\ucf54\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\nimport sys\r\nfrom collections import deque\r\n\r\nk = int(sys.stdin.readline())\r\nw, h = map(int, sys.stdin.readline().split())\r\n\r\n# \uae30\ubcf8 \uc774\ub3d9\r\ndx = [1, -1, 0, 0]\r\ndy = [0, 0, 1, -1]\r\n# \ub9d0\ucc98\ub7fc \uc774\ub3d9\r\nhorse_x = [-2, -1, 1, 2, 2, 1, -1, -2]\r\nhorse_y = [1, 2, 2, 1, -1, -2, -2, -1]\r\nland = []\r\n# \uba87\ubc88 \ub9d0\ub9cc\ud07c \uc774\ub3d9\ud588\ub294\uc9c0 \uad6c\ubd84\ud558\uc5ec \ubc29\ubb38 \uccb4\ud06c\r\nvisit = [[[False for _ in range(k+1)] for _ in range(w)] for _ in range(h)]\r\nfor i in range(k+1):\r\n    visit[0][0][i] = True\r\n# \ub2f5\uc774 \ub098\uc654\ub294\uc9c0 \uccb4\ud06c\r\nans = False\r\nfor _ in range(h):\r\n    land.append(list(map(int, sys.stdin.readline().split())))\r\n\r\nli = deque()\r\nli.append((0, 0, 0, 0))\r\n# \ub3c4\ucc29\uc9c0\uac00 \uc2dc\uc791\uc810\uc774\uba74 0 \ucd9c\ub825\r\nif w == 1 and h == 1:\r\n    print(0)\r\nelse:\r\n    # bfs \uc2dc\uc791\r\n    while li:\r\n        x, y, count, jump = li.popleft()\r\n        # \ub9d0\ucc98\ub7fc \uc774\ub3d9\ud558\ub294 \uae30\ud68c\uac00 \ub0a8\uc544\uc788\ub294 \uacbd\uc6b0, \ub9d0\ucc98\ub7fc \uc774\ub3d9\r\n        if jump &lt; k:\r\n            for i in range(8):\r\n                if ans:\r\n                    break\r\n                nx = x + horse_x[i]\r\n                ny = y + horse_y[i]\r\n                if nx == h-1 and ny == w-1:\r\n                    print(count+1)\r\n                    ans = True\r\n                    break\r\n                if 0 &lt;= nx &lt; h and 0 &lt;= ny &lt; w and not visit[nx][ny][jump+1]:\r\n                    if land[nx][ny] != 1:\r\n                        visit[nx][ny][jump+1] = True\r\n                        li.append((nx, ny, count+1, jump+1))\r\n        if ans:\r\n            break\r\n        # \uc77c\ubc18 \uc774\ub3d9\r\n        for i in range(4):\r\n            nx = x + dx[i]\r\n            ny = y + dy[i]\r\n            if nx == h - 1 and ny == w - 1:\r\n                print(count + 1)\r\n                ans = True\r\n                break\r\n            if 0 &lt;= nx &lt; h and 0 &lt;= ny &lt; w and not visit[nx][ny][jump]:\r\n                if land[nx][ny] != 1:\r\n                    visit[nx][ny][jump] = True\r\n                    li.append((nx, ny, count + 1, jump))\r\n        if ans:\r\n            break\r\n        # \ubaa9\uc801\uc9c0\uc5d0 \ub3c4\ub2ec\ud558\uc9c0 \ubabb\ud558\ub294 \uacbd\uc6b0\r\n        if len(li) == 0:\r\n            print(-1)</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\uc774\ubc88 \ubb38\uc81c\ub294 \uc815\uc11d\uc801\uc778 bfs \ubb38\uc81c\uc600\ub2e4.</p>\r\n\r\n<p>\ub098\uc774\ud2b8\ucc98\ub7fc \uc810\ud504\ud558\ub294 \ubc29\uc2dd\uacfc \uba87\ubc88 \uc810\ud504\ud55c \ud6c4 \ubc29\ubb38\ud588\ub294\uc9c0 \uccb4\ud06c\ub9cc \ud55c\ub2e4\uba74 \uc27d\uac8c \ud480 \uc218 \uc788\ub294 \ubb38\uc81c\uc600\ub2e4.</p>\r\n\r\n<p>\uc624\ub79c\ub9cc\uc5d0 \uc2dc\uac04\ucd08\uacfc\uac00 \uac78\ub9ac\uc9c0 \uc54a\uace0 \ub450\ubc88\uc9f8 \uc2dc\ub3c4\ub9cc\uc5d0 \uc131\uacf5\ud560 \uc218 \uc788\uc5c8\ub2e4.</p>\r\n\r\n<p>\uccab\ubc88\uc9f8 \uc2dc\ub3c4\ub294 \ub9d0\ucc98\ub7fc \uc774\ub3d9\ud558\uace0 \ubc29\ubb38\uccb4\ud06c\ub97c \ud560 \ub54c, jump\uc5d0 1\uc744 \ub354\ud558\uace0 \ucd94\uac00\ud558\uc9c0 \uc54a\uace0 \uc6d0\ub798 jump\ud69f\uc218\ub85c</p>\r\n\r\n<p>\uccb4\ud06c\ud558\uc5ec \uc2e4\ud328\ud588\uc9c0\ub9cc, \uae08\ubc29 \uc624\ub958\ub97c \ucc3e\uace0 \ud574\uacb0\ud560 \uc218 \uc788\uc5c8\ub2e4.</p>\r\n",
		"comment": []
	},
	{
		"id": 6,
		"category": "Algo",
		"title": "1865 \uc6dc\ud640",
		"subtitle": "graph(\ubca8\ub9cc-\ud3ec\ub4dc)",
		"author": "mocchat",
		"date": "2023\ub14410\uc6d412\uc77c",
		"body": "<p><img alt=\"\" src=\"..\\..\\static\\assets\\img\\1865pro.jpg\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\ucf54\ub4dc\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\nimport sys\r\nfrom collections import deque\r\n\r\ntc = int(sys.stdin.readline())\r\n\r\nfor _ in range(tc):\r\n    n, m, w = map(int, sys.stdin.readline().split())\r\n    # \ub3c4\ub85c \ubc0f \uc6dc\ud640 \uacbd\ub85c \uc800\uc7a5\r\n    li = [[sys.maxsize for _ in range(n+1)] for _ in range(n+1)]\r\n    # \uc815\ub2f5 \uc5ec\ubd80 \ud655\uc778\r\n    ans = False\r\n    # \uc6dc\ud640 \uc800\uc7a5\r\n    hole = []\r\n    for _ in range(m):\r\n        x, y, t = map(int, sys.stdin.readline().split())\r\n        if li[x][y] &gt; t:\r\n            li[x][y] = t\r\n        if li[y][x] &gt; t:\r\n            li[y][x] = t\r\n    for _ in range(w):\r\n        x, y, t = map(int, sys.stdin.readline().split())\r\n        if li[x][y] &gt; -t:\r\n            li[x][y] = -t\r\n            hole.append((y, x))\r\n\r\n    # \uc800\uc7a5\ub41c \ud640 \uac2f\uc218 \ub9cc\ud07c \uc2e4\ud589\r\n    while hole:\r\n        a, b = hole.pop()\r\n        stack = deque()\r\n        stack.append(a)\r\n        # \uc9c0\uc810 \ubcc4 \uac70\ub9ac \uc800\uc7a5\r\n        dis = [sys.maxsize for _ in range(n+1)]\r\n        dis[a] = 0\r\n        # bfs\ub85c \ubaa8\ub4e0 \uacbd\ub85c \ud0d0\uc0c9\r\n        while stack:\r\n            x = stack.popleft()\r\n            for i in range(1, n+1):\r\n                # maxsize\uac00 \uc544\ub2c8\uba74 \uc5f0\uacb0\ud1b5\ub85c\uac00 \uc788\ub2e4\ub294 \uac83\r\n                if li[x][i] != sys.maxsize:\r\n                    n_cost = dis[x] + li[x][i]\r\n                    # \ub3c4\ucc29\uc9c0\uc774\uace0 \ucf54\uc2a4\ud2b8\uac00 \uc74c\uc218\uc77c \uacbd\uc6b0 ans True\r\n                    if i == b and n_cost &lt; 0:\r\n                        ans = True\r\n                        break\r\n                    # \ub2e4\uc74c \uc9c0\uc810\uc5d0 \uc800\uc7a5\ub41c \ucf54\uc2a4\ud2b8\uac00 \ud604\uc7ac \ucf54\uc2a4\ud2b8\uc640 \uc774\ub3d9\ube44\uc6a9\uc744 \ud569\ud55c \uac83\ubcf4\ub2e4 \ud06c\uba74 \ubcc0\uacbd\r\n                    elif dis[i] &gt; n_cost:\r\n                        stack.append(i)\r\n                        dis[i] = n_cost\r\n            if ans:\r\n                break\r\n        if ans:\r\n            break\r\n\r\n    if ans:\r\n        print(&#39;YES&#39;)\r\n    else:\r\n        print(&#39;NO&#39;)\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>\uc774\ubc88 \ubb38\uc81c\ub294 \ucd5c\ub2e8\uacbd\ub85c \uc54c\uace0\ub9ac\uc998 \uc911\uc5d0 \ubca8\ub9cc \ud3ec\ub4dc \uc54c\uace0\ub9ac\uc998\uc744 \uc0ac\uc6a9\ud558\ub294 \ubb38\uc81c\uc600\ub2e4.</p>\r\n\r\n<p>\ub2e4\uc775\uc2a4\ud2b8\ub77c \uc54c\uace0\ub9ac\uc998\uacfc \ub2e4\ub978 \uc810\uc740 \ubca8\ub9cc \ud3ec\ub4dc \uc54c\uace0\ub9ac\uc998\uc740 \ubaa8\ub4e0 \uacbd\ub85c\ub97c \ud0d0\uc0c9\ud558\ubbc0\ub85c \uc74c\uc758 \ube44\uc6a9\uc744 \uacc4\uc0b0\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc774\ub2e4.</p>\r\n\r\n<p>\uc0ac\uc2e4 \uc774 \uc54c\uace0\ub9ac\uc998\uc744 \ud480 \ub54c, \ucc98\uc74c\uc5d0\ub294 \ubcc4 \uc0dd\uac01\uc5c6\uc774 bfs\ub85c \ud480\uc5c8\ub2e4.</p>\r\n\r\n<p>\ub098\uc911\uc5d0 \uc774\uac83\uc774&nbsp;\ubca8\ub9cc \ud3ec\ub4dc \uc54c\uace0\ub9ac\uc998\uc5d0 \uad00\ud55c \ubb38\uc81c\uc778 \uac83\uc744 \uc54c\uac8c \ub418\uc5c8\ub2e4.</p>\r\n\r\n<p>\ubca8\ub9cc \ud3ec\ub4dc\uc758 \uac1c\ub150\uc774 \ubaa8\ub4e0 \uacbd\ub85c \ud0d0\uc0c9\uc774\ubbc0\ub85c \ub0b4\uac00 \ub9cc\ub4e0 \ucf54\ub4dc\ub3c4 \ubca8\ub9cc \ud3ec\ub4dc \uc54c\uace0\ub9ac\uc998\uc774\ub77c\uace0 \ubcfc \uc218 \uc788\ub2e4\uace0 \uc0dd\uac01\ud55c\ub2e4.</p>\r\n\r\n<p>\ub2e4\ub9cc \uc778\ud130\ub137\uc5d0\uc11c \ucc3e\uc740 \ubca8\ub9cc \ud3ec\ub4dc \uc54c\uace0\ub9ac\uc998\uc740 \ub0b4\uac00 \ub9cc\ub4e0 \uac83\uacfc \uc57d\uac04 \ub2e4\ub974\ub2e4.</p>\r\n\r\n<p>\uc6b0\uc120 \uc774\uc911 for\ubb38\uc744 \uc774\uc6a9\ud558\uc5ec \uacbd\ub85c\ub97c \ud0d0\uc0c9\ud558\uc600\ub358\ub370 \uc774 \uc810\uc5d0\uc11c\ub294 \ub0b4 \ucf54\ub4dc\ub3c4 \ubaa8\ub4e0 \uacbd\ub85c\ub97c \ud0d0\uc0c9\ud560 \uc218 \uc788\uc73c\ubbc0\ub85c \uc0c1\uad00\uc5c6\ub2e4\uace0 \uc0dd\uac01\ud55c\ub2e4.</p>\r\n\r\n<p>\ud558\uc9c0\ub9cc \ub098\ub294 python3\ub85c \ud558\uba74 \uc2dc\uac04\ucd08\uacfc\uac00 \ub728\uace0 pypy3\ub85c \ud574\uc57c \ud1b5\uacfc\ud560 \uc218 \uc788\uc5c8\ub2e4.</p>\r\n\r\n<p>\uc5ed\uc2dc \uc778\ud130\ub137\uc5d0\uc11c \ucc3e\uc740&nbsp;\uac83\uc774 \uc880 \ub354 \ud6a8\uc728\uc801\uc778 \uc54c\uace0\ub9ac\uc998\uc778\uac00\ubcf4\ub2e4.</p>\r\n",
		"comment": []
	}
]